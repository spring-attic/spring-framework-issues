<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						https://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource" p:failFast="true"
		p:configLocation="classpath:org/springframework/issues/config/mybatis-config.xml" />

	<bean class="org.mybatis.spring.SqlSessionTemplate"
		c:sqlSessionFactory-ref="sqlSessionFactory" />

	<!-- ideally only the following declaration would be necessary, however because
	     MapperScannerConfigurer is a BeanDefinitionRegistryPostProcessor and because
	     this file is included via @ImportResource, it is "too late" for this component
	     to be properly treated as a BDRPP.
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="org.springframework.issues.dao" />
	-->
	
	<!-- The workaround is to include an explicit MapperFactoryBean -->
	<bean id="testMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"
		p:mapperInterface="org.springframework.issues.dao.TestDao"
		p:sqlSessionFactory-ref="sqlSessionFactory" />

</beans>
